Написать приложение для:
- регистрация пользователей
- подтверждение регистрации
- получение информации о пользователе
(полную информация для администратора и сокращенную версию для пользователя)
- поиск по id, email


Для хранения данных о пользователе создадим класс User
- id
- firstName
- lastName
- email
- hashPassword
- role
- status
- photoLink -> будет храниться полный путь (ссылка) на файл (аватар или фото),
связанный с этим user

enum Role: ADMIN, USER, MANAGER

enum Status: NOT_CONFIRM, CONFIRMED, BANNED, DELETE


Для хранения данных о коде подтверждения (confirmation code) создадим класс:
ConfirmationCode:
- id
- code
- user
- expireDateTime
- isConfirmed


Новый пользователь проходит процедуру регистрации, вводит все свои данные.
Если данные - корректные, то мы:
- регистрируем пользователя (то есть заносим его данные в БД)
- генерируем новый уникальный код подтверждения и отправляем ему на почту

Пользователь переходи по ссылке из письма, то есть тем самым отправляет
на наш сервер get-запрос на определенный путь, который мы обрабатываем.
Мы проверяем, что код подтверждения:
- во-первых, существует (то есть мвы его создали и кому-то отправили)
- во-вторых, действительный (то есть его "срок действия" еще не истек)

Находи того пользователя для которого мы этот код создавали и у него
меняем статус на CONFIRMED.


Для хранения данных о "фото" пользователя (а их может быть несколько
для одного пользователя) - создадим класс FileInfo

FileInfo:
- id
- link
- user -> пользователь, к которому эта картинка относится


API description:

UserController
// добавить нового пользователя
public UserResponseDto addNewUser(UserRequestDto request);

// найти всех пользователей (полная информация - для ADMIN)
public List<User> findAllFullDetails();

// найти всех пользователей (ограниченная информация - для MANAGER)
public List<UserResponseDto> findAll();

//найти пользователя по ID
public UserResponseDto findUserById(Integer id);

//найти пользователя по email
public UserResponseDto findUserByEmail(String email);

// найти всех по имени
public List<UserResponseDto> findUserByLastName(String lastName);

// обновить данные от имени пользователь (пользователь хочет
// поменять какие-то данные в своем профиле)
public UserResponseDto updateUser(UserUpdateRequestDto);

как можно сделать update:
1 вариант - метод get через командную строку - указать параметр в котором передать новое значение
localhost:8080/api/update?lastname=....&password=...

2 вариант - метод post с использованием dto
когда мы получаем такой запрос, то из тела запроса данные попадают в userUpdateRequestDto
ЕСЛИ в этом объекте КАКОЕ-ТО поле присутствует и его значение удовлетворяет
требованиям валидации, то мы должны заменить  в нашем пользователе значение этого поля


// удаление записи
public boolean deleteUser(Integer id);



CodeConfirmationController

// заново запросить код подтверждения для существующего пользователя
// запрос будет производится через параметр строки запроса
// localhost:8080/api/code/renew?email=...

public boolean codeRenew(String email);

// подтверждение почты через отправку кода регистрации

public boolean confirmationEmail(String codeConfirmation);

